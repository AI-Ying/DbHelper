//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成
//     如果重新生成代码，将丢失对此文件所做的更改。
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

public class DBHelper : IDisposable
{
	public virtual string ConnectionString
	{
		get;
		set;
	}

	public virtual string ProviderName
	{
		get;
		set;
	}

	public virtual DbProviderFactory Factory
	{
		get;
		set;
	}

	public virtual DbConnection Connection
	{
		get;
		set;
	}

	public virtual bool IsBeginTransaction
	{
		get;
		set;
	}

	public virtual DbTransaction Transaction
	{
		get;
		set;
	}

	public virtual DbCommand Command
	{
		get;
		set;
	}

	public virtual DbConfig DbConfig
	{
		get;
		set;
	}

	public DBHelper()
	{
	}

	public virtual DbCommand GetCommand(string sql, CommandType cmdType, DbParameter[] param)
	{
		throw new System.NotImplementedException();
	}

	public virtual void CreateFactory()
	{
		throw new System.NotImplementedException();
	}

	public virtual DbConnection GetConnection()
	{
		throw new System.NotImplementedException();
	}

	public virtual void ClearParameters()
	{
		throw new System.NotImplementedException();
	}

	public virtual void BeginTransaction()
	{
		throw new System.NotImplementedException();
	}

	public virtual void CommitTransaction()
	{
		throw new System.NotImplementedException();
	}

	public virtual void RollBackTransaction()
	{
		throw new System.NotImplementedException();
	}

	public virtual int ExecuteNonQuery(string sql, CommandType cmdType, DbParameter[] param)
	{
		throw new System.NotImplementedException();
	}

	public virtual int ExecuteNonQuery(string sql, DbParameter[] param)
	{
		throw new System.NotImplementedException();
	}

	public virtual object ExecuteScalar(string sql, CommandType cmdType, DbParameter[] param)
	{
		throw new System.NotImplementedException();
	}

	public virtual object ExecuteScalar(string sql, DbParameter[] param)
	{
		throw new System.NotImplementedException();
	}

	public virtual DbDataReader ExecuteReader(string sql, CommandType cmdType, DbParameter[] param)
	{
		throw new System.NotImplementedException();
	}

	public virtual DbDataReader ExecuteReader(string sql, DbParameter[] param)
	{
		throw new System.NotImplementedException();
	}

	public virtual DataSet GetDataSet(string sql, CommandType cmdType, DbParameter[] param)
	{
		throw new System.NotImplementedException();
	}

	public virtual DataSet GetDataSet(string sql, DbParameter[] param)
	{
		throw new System.NotImplementedException();
	}

	public virtual DataTable GetDataTable(string sql, CommandType cmdType, DbParameter[] param)
	{
		throw new System.NotImplementedException();
	}

	public virtual DataTable GetDataTable(string sql, DbParameter[] param)
	{
		throw new System.NotImplementedException();
	}

	public virtual DataRow GetDataRow(string sql, int index, CommandType cmdType, DbParameter[] param)
	{
		throw new System.NotImplementedException();
	}

	public virtual DataRow GetDataRow(string sql, int index, DbParameter[] param)
	{
		throw new System.NotImplementedException();
	}

	public virtual DataRow GetDataRow(string sql, DbParameter[] param)
	{
		throw new System.NotImplementedException();
	}

	public virtual void Dispose()
	{
		throw new System.NotImplementedException();
	}

}

